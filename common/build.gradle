/*
 * Copyright (C) 2015 Fred Grott(aka shareme GrottWorkShop)
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under License.
 */
apply plugin: 'com.android.library'
apply plugin: 'de.hannesstruss.godot'



android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("commonAndroidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("commonAndroidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("commonAndroidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("commonAndroidTargetSdkVersion")
        versionCode globalConfiguration.getAt("commonVersionCode")
        versionName globalConfiguration.getAt("commonVersionName")
    }
    /*
     Warning, multi-catch is not until android 4.4.2
     */
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    aaptOptions {
        noCompress 'txt'
        ignoreAssetsPattern "!.svn:!.git:!.ds_store:!*.scc:.*:<dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions{
        reportDir = "$rootProject.ext.ourReportsDir/androidTests"

        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile rootProject.ext.tddDependencies.junit
    testCompile rootProject.ext.tddDependencies.mockito
    testCompile rootProject.ext.tddDependencies.powermockJunit
    testCompile rootProject.ext.tddDependencies.powermockMockito
    testCompile rootProject.ext.tddDependencies.assertjJunitCore

    androidTestCompile rootProject.ext.instrumentedDependencies.espressoRunner
    androidTestCompile rootProject.ext.instrumentedDependencies.espressoRules
    androidTestCompile rootProject.ext.instrumentedDependencies.espressoCore
    androidTestCompile (rootProject.ext.instrumentedDependencies.espressoContrib){
        exclude module: 'recyclerview-v7'
        exclude module: 'support-v4'

    }
    androidTestCompile (rootProject.ext.instrumentedDependencies.assertjAndroid){
        exclude group: 'com.android.support'
    }
    compile rootProject.ext.androidSupportDependencies.appCompat
    compile rootProject.ext.logDependencies.timber

}
